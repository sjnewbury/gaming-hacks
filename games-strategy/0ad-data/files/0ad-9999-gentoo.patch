From: Julian Ospald <hasufell@gentoo.org>
Date: Sun Jun 24 18:32:38 UTC 2012
Subject: build system

* respect flags
* disable debug build of spidermonkey

--- ./libraries/source/fcollada/src/Makefile
+++ ./libraries/source/fcollada/src/Makefile
@@ -9,9 +9,9 @@
 
 CXX ?= g++
 CXXFLAGS += -fvisibility=hidden -W -Wall -Wno-unused-parameter -Wno-unused-function $(OS_DEFINE) $(PIC_FLAGS) $(CPPFLAGS)
-CXXFLAGS_DEBUG := -O0 -g -D_DEBUG -DRETAIL
-CXXFLAGS_RELEASE := -O2 -DNDEBUG -DRETAIL
-CXXFLAGS_TEST := -O0 -g -D_DEBUG
+CXXFLAGS_DEBUG := -D_DEBUG -DRETAIL
+CXXFLAGS_RELEASE := -DNDEBUG -DRETAIL
+CXXFLAGS_TEST := -D_DEBUG
 LIBS += `pkg-config libxml-2.0 --libs`
 INCLUDES += -IFCollada `pkg-config libxml-2.0 --cflags`
 INCLUDES_TEST := -IFCollada/FColladaTest $(INCLUDES)
--- ./build/premake/premake5/src/tools/gcc.lua.orig	2019-04-03 13:00:49.071044020 +0100
+++ ./build/premake/premake5/src/tools/gcc.lua	2019-04-03 13:05:09.525071870 +0100
@@ -323,7 +323,7 @@
 
 	function gcc.ldsymbols(cfg)
 		-- OS X has a bug, see http://lists.apple.com/archives/Darwin-dev/2006/Sep/msg00084.html
-		return iif(cfg.system == p.MACOSX, "-Wl,-x", "-s")
+		return iif(cfg.system == p.MACOSX, "-Wl,-x", "")
 	end
 
 	gcc.ldflags = {
--- ./build/premake/premake5/build/gmake.unix/Premake5.make.orig	2019-04-03 13:08:06.451141317 +0100
+++ ./build/premake/premake5/build/gmake.unix/Premake5.make	2019-04-03 13:09:55.222823442 +0100
@@ -19,8 +19,8 @@
   INCLUDES += -I../../contrib/lua/src -I../../contrib/luashim -I../../contrib/zlib -I../../contrib/libzip -I../../contrib/curl/include
   FORCE_INCLUDE +=
   ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
-  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O3 -Wall -Wextra
-  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O3 -Wall -Wextra -fno-stack-protector
+  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -Wall -Wextra
+  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -Wall -Wextra -fno-stack-protector
   ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
   LIBS += bin/Release/liblua-lib.a bin/Release/libzip-lib.a bin/Release/libzlib-lib.a bin/Release/libcurl-lib.a bin/Release/libmbedtls-lib.a -lm -ldl -lrt
   LDDEPS += bin/Release/liblua-lib.a bin/Release/libzip-lib.a bin/Release/libzlib-lib.a bin/Release/libcurl-lib.a bin/Release/libmbedtls-lib.a
--- ./libraries/source/spidermonkey/build.sh.orig	2019-08-22 00:12:18.738442841 +0100
+++ ./libraries/source/spidermonkey/build.sh	2019-08-22 06:35:38.860800140 +0100
@@ -93,34 +93,8 @@
 cd js/src
 
 # Clean up data generated by previous builds that could cause problems
-rm -rf build-debug
 rm -rf build-release
 
-# We want separate debug/release versions of the library, so we have to change
-# the LIBRARY_NAME for each build.
-# (We use perl instead of sed so that it works with MozillaBuild on Windows,
-# which has an ancient sed.)
-perl -i.bak -pe 's/(SHARED_LIBRARY_NAME\s+=).*/$1 '\''mozjs45-ps-debug'\''/' moz.build
-mkdir -p build-debug
-cd build-debug
-if [ "${OS}" = "Windows_NT" ]
-then
-  CXXFLAGS="${CXXFLAGS} ${TLCXXFLAGS}" ../configure ${CONF_OPTS} \
-    --with-nspr-cflags="${NSPR_INCLUDES}" --with-nspr-libs="${NSPR_LIBS}" \
-    --enable-debug \
-    --disable-optimize \
-    --enable-js-diagnostics \
-    --enable-gczeal
-else
-  CXXFLAGS="${CXXFLAGS} ${TLCXXFLAGS}" ../configure ${CONF_OPTS} \
-    --enable-debug \
-    --disable-optimize \
-    --enable-js-diagnostics \
-    --enable-gczeal
-fi
-${MAKE} ${MAKE_OPTS}
-cd ..
-
 perl -i.bak -pe 's/(SHARED_LIBRARY_NAME\s+=).*/$1 '\''mozjs45-ps-release'\''/' moz.build
 mkdir -p build-release
 cd build-release
@@ -144,7 +118,6 @@
 
 if [ "${OS}" = "Windows_NT" ]
 then
-  INCLUDE_DIR_DEBUG=include-win32-debug
   INCLUDE_DIR_RELEASE=include-win32-release
   DLL_SRC_SUFFIX=.dll
   DLL_DST_SUFFIX=.dll
@@ -152,7 +125,6 @@
   LIB_SRC_SUFFIX=.lib
   LIB_DST_SUFFIX=.lib
 else
-  INCLUDE_DIR_DEBUG=include-unix-debug
   INCLUDE_DIR_RELEASE=include-unix-release
   DLL_SRC_SUFFIX=.so
   DLL_DST_SUFFIX=.so
@@ -176,29 +148,21 @@
   pushd ${FOLDER}/js/src/build-release/dist/include
   rm mozzconf.h zconf.h zlib.h
   popd
-  pushd ${FOLDER}/js/src/build-debug/dist/include
-  rm mozzconf.h zconf.h zlib.h
-  popd
 fi
 
 # Copy files into the necessary locations for building and running the game
 
 # js-config.h is different for debug and release builds, so we need different include directories for both
-mkdir -p ${INCLUDE_DIR_DEBUG}
 mkdir -p ${INCLUDE_DIR_RELEASE}
 cp -R -L ${FOLDER}/js/src/build-release/dist/include/* ${INCLUDE_DIR_RELEASE}/
-cp -R -L ${FOLDER}/js/src/build-debug/dist/include/* ${INCLUDE_DIR_DEBUG}/
 
 mkdir -p lib/
-cp -L ${FOLDER}/js/src/build-debug/dist/sdk/lib/${LIB_PREFIX}mozjs45-ps-debug${LIB_SRC_SUFFIX} lib/${LIB_PREFIX}mozjs45-ps-debug${LIB_DST_SUFFIX}
 cp -L ${FOLDER}/js/src/build-release/dist/sdk/lib/${LIB_PREFIX}mozjs45-ps-release${LIB_SRC_SUFFIX} lib/${LIB_PREFIX}mozjs45-ps-release${LIB_DST_SUFFIX}
-cp -L ${FOLDER}/js/src/build-debug/dist/bin/${LIB_PREFIX}mozjs45-ps-debug${DLL_SRC_SUFFIX} ../../../binaries/system/${LIB_PREFIX}mozjs45-ps-debug${DLL_DST_SUFFIX}
 cp -L ${FOLDER}/js/src/build-release/dist/bin/${LIB_PREFIX}mozjs45-ps-release${DLL_SRC_SUFFIX} ../../../binaries/system/${LIB_PREFIX}mozjs45-ps-release${DLL_DST_SUFFIX}
 
 # On Windows, also copy debugging symbols files
 if [ "${OS}" = "Windows_NT" ]
 then
-  cp -L ${FOLDER}/js/src/build-debug/js/src/${LIB_PREFIX}mozjs45-ps-debug-vc140.pdb ../../../binaries/system/${LIB_PREFIX}mozjs45-ps-debug-vc140.pdb
   cp -L ${FOLDER}/js/src/build-release/js/src/${LIB_PREFIX}mozjs45-ps-release-vc140.pdb ../../../binaries/system/${LIB_PREFIX}mozjs45-ps-release-vc140.pdb
 fi
 
